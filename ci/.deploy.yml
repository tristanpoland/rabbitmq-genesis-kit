groups:
- jobs:
  - build-kit
  - spec-check
  - ship-prerelease
  - spec-tests
  - deploy-baseline
  - prepare
  - ship-release
  name: rabbitmq-genesis-kit
- jobs:
  - major
  - minor
  - patch
  name: versions
jobs:
- name: build-kit
  plan:
  - do:
    - in_parallel:
      - get: version
        params:
          pre: rc
      - get: git
        trigger: true
      - get: git-ci
      - get: release-cache
    - file: git-ci/ci/tasks/build-kit.yml
      params:
        KIT_SHORTNAME: rabbitmq
        VAULT_TOKEN: ((vault.token))
        VAULT_URI: ((vault.url))
      task: build-kit
    - params:
        acl: public-read
        file: build/*.tar.gz
      put: build
    - params:
        file: version/number
      put: version
    - params:
        acl: public-read
        content-type: application/json
        file: release-cache/release-lookup-cache.json
      put: release-cache
    on_failure:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: prerelease build for '$BUILD_JOB_NAME' failed.
        ok: false
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
    on_success:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: prerelease build for '$BUILD_JOB_NAME' succeeded.
        ok: true
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
  public: true
  serial: false
- name: prepare
  plan:
  - do:
    - in_parallel:
      - get: version
        params:
          bump: final
        passed:
        - deploy-baseline
      - get: spec-check
        passed:
        - deploy-baseline
      - get: git
        passed:
        - deploy-baseline
        trigger: true
      - get: git-ci
      - get: git-latest-tag
      - get: release-notes
    - file: git-ci/ci/tasks/generate-release-notes.yml
      params:
        GIT_EMAIL: ((github.email))
        GIT_NAME: ((github.name))
        KIT_SHORTNAME: rabbitmq
        RELEASE_NOTES_FILE: rabbitmq-genesis-kit-release-notes.md
        RELEASE_NOTES_WEB_URL: https://github.com/genesis-community/ci-release-notes/edit/main/rabbitmq-genesis-kit-release-notes.md
        VAULT_TOKEN: ((vault.token))
        VAULT_URI: ((vault.url))
      task: generate-release-notes
    - params:
        rebase: true
        repository: release-notes
      put: release-notes
    on_failure:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: release candidate job 'pre' failed (which is unusual).
        ok: false
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
  public: true
  serial: true
- name: ship-prerelease
  plan:
  - do:
    - in_parallel:
      - get: build
        passed:
        - build-kit
      - get: version
        passed:
        - build-kit
      - get: git
        passed:
        - build-kit
      - get: git-ci
    - file: git-ci/ci/tasks/prerelease.yml
      params:
        DEVELOP_BRANCH: develop
        GIT_EMAIL: ((github.email))
        GIT_NAME: ((github.name))
        GITHUB_OWNER: genesis-community
        KIT_SHORTNAME: rabbitmq
        NOTIFICATION_OUT: notifications
        PRERELEASE: 1
        RELEASE_BRANCH: develop
        RELEASE_NOTES: rabbitmq-genesis-kit-release-notes.md
        RELEASE_ROOT: gh
      task: ship-prerelease
    - params:
        body: gh/notes.md
        commitish: gh/commit
        globs:
        - gh/artifacts/*
        name: gh/name
        tag: gh/tag
      put: github-prerelease
    on_failure:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: tests job '$BUILD_JOB_NAME' failed.
        ok: false
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
  public: true
  serial: false
- name: ship-release
  plan:
  - do:
    - in_parallel:
      - get: version
        params:
          bump: final
        passed:
        - prepare
        resource: version
      - get: git
        passed:
        - prepare
      - get: spec-check
        passed:
        - prepare
        trigger: false
      - get: release-notes
      - get: release-cache
      - get: git-ci
      - get: git-main
      - get: git-latest-tag
    - file: git-ci/ci/tasks/build-kit.yml
      params:
        KIT_SHORTNAME: rabbitmq
        VAULT_TOKEN: ((vault.token))
        VAULT_URI: ((vault.url))
      task: build-kit
    - file: git-ci/ci/tasks/release.yml
      params:
        DEVELOP_BRANCH: develop
        GIT_EMAIL: ((github.email))
        GIT_NAME: ((github.name))
        GITHUB_OWNER: genesis-community
        KIT_SHORTNAME: rabbitmq
        NOTIFICATION_OUT: notifications
        RELEASE_BRANCH: main
        RELEASE_NOTES: rabbitmq-genesis-kit-release-notes.md
        RELEASE_ROOT: gh
      task: release
    - params:
        merge: false
        repository: git-main
        tag: gh/tag
      put: git-main
    - params:
        body: gh/notes.md
        globs:
        - gh/artifacts/*
        name: gh/name
        tag: gh/tag
      put: github
    - params:
        bump: patch
      put: version
    - params:
        file: notifications/message
        link: git@github.com:genesis-community/rabbitmq-genesis-kit/releases
        method: announce
      put: notify
    on_failure:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: release job '$BUILD_JOB_NAME' failed.
        ok: false
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
    on_success:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: release job '$BUILD_JOB_NAME' succeeded.
        ok: true
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
  public: true
  serial: true
- name: spec-check
  plan:
  - do:
    - in_parallel:
      - get: build
        passed:
        - build-kit
        trigger: true
      - get: version
        passed:
        - build-kit
      - get: git
        passed:
        - build-kit
      - get: git-ci
      - get: git-latest-tag
    - file: git-ci/ci/tasks/spec-check.yml
      task: spec-check
    - params:
        acl: public-read
        file: spec-check/diff-*
      put: spec-check
    on_failure:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: tests job '$BUILD_JOB_NAME' failed.
        ok: false
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
  public: true
  serial: false
- name: major
  plan:
  - do:
    - get: version
      params:
        bump: major
      trigger: false
    - params:
        file: version/number
      put: version
    on_failure:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: major version bump job '$BUILD_JOB_NAME' failed (which is unusual).
        ok: false
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
    on_success:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: major version bump job '$BUILD_JOB_NAME' succeeded.
        ok: true
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
  public: true
- name: minor
  plan:
  - do:
    - get: version
      params:
        bump: minor
      trigger: false
    - params:
        file: version/number
      put: version
    on_failure:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: minor version bump job '$BUILD_JOB_NAME' failed (which is unusual).
        ok: false
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
    on_success:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: minor version bump job '$BUILD_JOB_NAME' succeeded.
        ok: true
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
  public: true
- name: patch
  plan:
  - do:
    - get: version
      params:
        bump: patch
      trigger: false
    - params:
        file: version/number
      put: version
    on_failure:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: patch version bump job '$BUILD_JOB_NAME' failed (which is unusual).
        ok: false
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
    on_success:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: patch version bump job '$BUILD_JOB_NAME' succeeded.
        ok: true
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
  public: true
- name: deploy-baseline
  plan:
  - do:
    - in_parallel:
      - get: version
        passed:
        - spec-check
        - spec-tests
      - get: build
        passed:
        - spec-check
        - spec-tests
        trigger: true
      - get: spec-check
        passed:
        - spec-check
      - get: git
        passed:
        - spec-check
        - spec-tests
      - get: git-ci
    - file: git-ci/ci/tasks/deploy.yml
      params:
        DEPLOY_ENV: ci-vsphere-baseline
        GIT_EMAIL: ((github.email))
        GIT_NAME: ((github.name))
        INFRASTRUCTURE: vsphere
        KIT_SHORTNAME: rabbitmq
        SKIP_CLEAN: false
        SKIP_FRESH: false
        SKIP_REPLACE_SECRETS: false
        SKIP_SMOKE_TESTS: false
        VAULT_TOKEN: ((vault.token))
        VAULT_URI: ((vault.url))
      task: test-deploy-baseline
    on_failure:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: tests job '$BUILD_JOB_NAME' failed.
        ok: false
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
  public: true
  serial_groups: []
- name: spec-tests
  plan:
  - do:
    - in_parallel:
      - get: build
        passed:
        - build-kit
        trigger: true
      - get: version
        passed:
        - build-kit
      - get: git
        passed:
        - build-kit
      - get: git-ci
      - get: git-latest-tag
    - attempts: 2
      file: git-ci/ci/tasks/spec-tests.yml
      task: spec-tests
    on_failure:
      params:
        link: https://pipes.scalecf.net/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        message: tests job '$BUILD_JOB_NAME' failed.
        ok: false
        topic: rabbitmq-genesis-kit-pipeline-$BUILD_JOB_NAME
      put: notify
  public: true
  serial: false
resource_types:
- name: shout-notification
  source:
    repository: huntprod/shout-resource
  type: docker-image
resources:
- name: build
  source:
    access_key_id: ((cloudfoundry-community-aws.access_key_id))
    bucket: genesis-pipeline
    endpoint: null
    regexp: rabbitmq-genesis-kit/build/(.*).tar.gz
    region_name: us-east-1
    secret_access_key: ((cloudfoundry-community-aws.secret_access_key))
    skip_ssl_verification: false
  type: s3
- check_every: 1h
  name: git-ci
  source:
    branch: develop
    disable_ci_skip: true
    paths:
    - ci/*
    private_key: ((github.private_key))
    uri: git@github.com:genesis-community/rabbitmq-genesis-kit
  type: git
- check_every: 1h
  name: git-latest-tag
  source:
    branch: develop
    disable_ci_skip: true
    private_key: ((github.private_key))
    tag_regex: ^v[0-9\.]*$
    uri: git@github.com:genesis-community/rabbitmq-genesis-kit
  type: git
- check_every: 1h
  name: git-main
  source:
    branch: main
    private_key: ((github.private_key))
    uri: git@github.com:genesis-community/rabbitmq-genesis-kit
  type: git
- check_every: 1h
  name: git
  source:
    branch: develop
    commit_filter:
      exclude:
      - ^\[ci\] release v
      - '^WIP:'
    ignore_paths:
    - ci
    private_key: ((github.private_key))
    uri: git@github.com:genesis-community/rabbitmq-genesis-kit
  type: git
- name: github-prerelease
  source:
    access_token: ((github.access_token))
    owner: genesis-community
    pre_release: true
    release: false
    repository: rabbitmq-genesis-kit
  type: github-release
- name: github
  source:
    access_token: ((github.access_token))
    owner: genesis-community
    repository: rabbitmq-genesis-kit
  type: github-release
- name: notify
  source:
    password: ((shout.password))
    topic: rabbitmq-genesis-kit-pipeline
    url: ((shout.url))
    username: ((shout.username))
  type: shout-notification
- name: release-cache
  source:
    access_key_id: ((cloudfoundry-community-aws.access_key_id))
    bucket: genesis-pipeline
    driver: s3
    endpoint: null
    initial_version: EfKas_zbhzhLrSyrWLz753zC5RyyambH
    region_name: us-east-1
    secret_access_key: ((cloudfoundry-community-aws.secret_access_key))
    skip_ssl_verification: false
    versioned_file: release-lookup-cache.json
  type: s3
- check_every: 1h
  name: release-notes
  source:
    branch: main
    disable_ci_skip: true
    paths:
    - rabbitmq-genesis-kit-release-notes.md
    private_key: ((github.private_key))
    uri: git@github.com:genesis-community/ci-release-notes
  type: git
- name: spec-check
  source:
    access_key_id: ((cloudfoundry-community-aws.access_key_id))
    bucket: genesis-pipeline
    endpoint: null
    regexp: rabbitmq-genesis-kit/spec-check/diff-(.*)
    region_name: us-east-1
    secret_access_key: ((cloudfoundry-community-aws.secret_access_key))
    skip_ssl_verification: false
  type: s3
- name: version
  source:
    access_key_id: ((cloudfoundry-community-aws.access_key_id))
    bucket: genesis-pipeline
    driver: s3
    endpoint: null
    initial_version: 0.5.1
    key: rabbitmq-genesis-kit/version
    region_name: us-east-1
    secret_access_key: ((cloudfoundry-community-aws.secret_access_key))
    skip_ssl_verification: false
  type: semver

